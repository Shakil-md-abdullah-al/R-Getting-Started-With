sqrt()
#call libraries
library(gapminder)
library(dplyr)
list=gapminder
#Add a new column by mutate
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)
#Sort a table
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)
#Sort a Table
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
arrange(TotalGDP)
#Sort a table in Decending Order
gapminder %>%
mutate(TotalGDp=pop*gdpPercap)
#Sort a table in Decending Order
gapminder %>%
mutate(TotalGDp=pop*gdpPercap)%>%
arrange(desc(TotalGDp))
#call libraries
library(gapminder)
library(dplyr)
list=gapminder
#Summaries
gapminder %>%
summarise(minimum=min(pop))
gapminder %>%
summarise(maximum=max(pop))
gapminder %>%
summarise(Average=mean(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop)%>%
Maximum=max(pop)%>%
Average=mean(pop)%>%
total=n())
#Total Summary
gapminder %>%
summarise(Minimum=min(pop)
Maximum=max(pop)
Average=mean(pop)
total=n())
#Total Summary
gapminder %>%
summarise(Minimum=min(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop)
Maximum=max(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop)%>%
Maximum=max(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop)%>%
Maximum =max(pop))
summarise(Minimum=min(pop)
#Total Summary
gapminder %>%
summarise(Minimum=min(pop)
)
#Total Summary
gapminder %>%
summarise(Minimum=min(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop),
Maximun-max(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop),
Maximun=max(pop))
#Total Summary
gapminder %>%
summarise(Minimum=min(pop),
Maximun=max(pop),
Average=mean(pop),
total=n())
#Find for each continent
gapminder %>%
group_by(continent)%>%
summarise(Minimum=min(pop),
Maximum=max(pop),
Average=mean(pop),
Total=n())
#call library
library(gapminder)
library(dplyr)
list=gapminder
#Pipe Operation
sum(50,30)%>%
mean()%>%
log2()
gapminder %>%
head()
#03
gapminder %>%
select(country,pop)%>%
head()
#04
gapminder %>%
select(country,pop)%>%
filter(country=="Bangladesh")
#05
gapminder %>%
select(country,pop,gdpPercap)%>%
filter(country=="Bangladesh",year==1952)%>%
mutate(TotalGDP=pop*gdpPercap)
#05
gapminder %>%
select(country,year,pop,gdpPercap)%>%
filter(country=="Bangladesh",year==1952)%>%
mutate(TotalGDP=pop*gdpPercap)
#05
gapminder %>%
select(country,year,pop,gdpPercap)%>%
filter(country=="Bangladesh",year==1952)%>%
mutate(TotalGDP=pop*gdpPercap)%>%
select(country,TotalGDP)
#05
gapminder %>%
select(country,year,pop,gdpPercap)%>%
filter(country=="Bangladesh",year==1952)%>%
mutate(TotalGDP=pop*gdpPercap)%>%
select(country,year,TotalGDP)
#Mutate Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)
#Mutate Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa")
#Mutate Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa"year==1962)%>%
select(country,year,TotalGDP)
#Mutate Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)
#Mutate Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)
#Find Summary of Muted Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)%>%
summarise(Miimum=min(TotalGDP),
Maximum=max(TotalGDP),
Average=mean(TotalGDP),
Totl=n())
#Find Summary of Muted Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)%>%
summarise(Miimum=min(TotalGDP),
Maximum=max(TotalGDP),
Average=mean(TotalGDP),
Totl=n())%>%
mutate(Difference=max(TotalGDP)-min(TotalGDP))
#Find Summary of Muted Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)%>%
summarise(Miimum=min(TotalGDP),
Maximum=max(TotalGDP),
Average=mean(TotalGDP),
Totl=n())%>%
mutate(summarise(max(TotalGDP)-min(TotalGDP)))
#Find Summary of Muted Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)%>%
summarise(Miimum=min(TotalGDP),
Maximum=max(TotalGDP),
Average=mean(TotalGDP),
DIfference=max(TotalGDP)-min(TotalGDP),
Totl=n())%>%
#Find Summary of Muted Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)%>%
summarise(Miimum=min(TotalGDP),
Maximum=max(TotalGDP),
Average=mean(TotalGDP),
DIfference=max(TotalGDP)-min(TotalGDP),
Totl=n())
Total=n())
#Find Summary of Muted Function
gapminder %>%
mutate(TotalGDP=pop*gdpPercap)%>%
filter(continent=="Africa",year==1962)%>%
select(country,year,TotalGDP)%>%
summarise(Miimum=min(TotalGDP),
Maximum=max(TotalGDP),
Average=mean(TotalGDP),
Total=n())
#Find The minimum and maximum Groupwise
gapminder %>%
group_by(continent)%>%
summarise(Maximum=max(pop),
Minimum=min(pop),
Average=mean(pop),
Total=n())
#Check Version
version
#Create a Data Feame
dataf=data.frame(Col_1=1:10,Col_2=20:11)
#Create a Data Feame
dataf=data.frame(Col_1=1:10,Col_2=20:11,Col3=LETTERS[J:S])
#Create a Data Feame
dataf=data.frame(Col_1=1:10,Col_2=20:11,Col3=LETTERS[10:19])
View(dataf)
#Create a Data Feame
dataf=data.frame(Col_1=1:10,Col_2=LETTERS[10:19],Col3=20:11)
View(dataf)
dataf
rownames(dataf)
#Names of ...
colnames(dataf)
rownames(dataf)
dim(dataf)
str(dataf)
summary(dataf)
#create a new Data frame from Previous
dataf2=dataf[2:7,]
View(dataf2)
#Return a Specific Column
dataf$Col_2
df[,1]
#Matrix
Mat=matrix(20:30,nrow = 5,ncol = 2)
#Matrix
Mat=matrix(21:30,nrow = 5,ncol = 2)
View(Mat)
class(mat)
one
#One Dimension
one=dataf$Col_2
one
class(one)
#Convert
cha=as.character(one)
cha
factt=as.factor(one)
factt
class(factt)
#Print Letters
letters[1:10]
LETTERS[26:15]
#Print repeat
rep(11,5)
rep("Shakil",5)
length(dataf$Col_2)
#Set operation
intersect(dataf$Col3,dataf$Col_1)
View(dataf)
union(dataf$Col_1,dataf$Col_2)
setdiff(dataf$Col3,dataf$Col_1)
#Package installation
#install.packages("gapminder)
#Call library
library(gapminder)
library(dplyr)
list=gapminder
head(gapminder)
dim(gap)
dim(gapminder)
str(gapminder)
summary(gapminder)
#Documantation
?gapminder
?dplyr
#Extract Column and Row
select(gapminder,country,pop)
select(gapminder,-continer)
select(gapminder,-continer)
View(list)
select(gapminder,-continent)
#Show with String
select(gapminder,starts_with("c"))
select(gapminder,ends_with("p"))
select(gapminder,contains("o"))
#Filter
fil1=filter(gapminder,country=="Bangladesh")
fil11=filter(gapminder,country %in% c("Bangladesh","India"))
#Pipe Operation
sum(2,3) %>%
mean()%>%
log2()
gapminder %>%
head()
gapminder %>%
select(country,pop)%>%
head()
gapminder %>%
select(country,pop)%>%
filter(country=="India")
gapminder %>%
filter(country=="Bangladesh")%>%
mutate(TotalGDP=pop*gdpPercap)
gapminder %>%
filter(country=="Bangladesh")%>%
mutate(TotalGDP=pop*gdpPercap)%>%
select(country,year,lifeExp,gdpPercap,TotalGDP)
#Summary the GDP continent wise
gapminder %>%
group_by(continent)%>%
summarise(Minimum=min(gdpPercap),
Maximum=max(gdpPercap),
Average=mean(gdpPercap),
Total=n())
#Call libraries
library(gapminder)
library(dplyr)
head(gapminder)
#Write a File
write.table(gapminder,"G:\GitHub\R Getting Started with\R File/01_First_File.txt")
#Write a File
write.table(gapminder,"~\GitHub\R Getting Started with\R File/01_First_File.txt")
#Write a File
write.table(gapminder,"~G:/GitHub\/R Getting Started with/R File/01_First_File.txt")
#Write a File
write.table(gapminder,"~G:/GitHub/R Getting Started with/R File/01_First_File.txt")
#Write a File
write.table(gapminder,"~G:\GitHub\R Getting Started with/01_First_File.txt")
#Write a File
write.table(gapminder,"G\GitHub\R Getting Started with/01_First_File.txt")
#Write a File
write.table(gapminder,"GitHub\R Getting Started with/01_First_File.txt")
#Write a File
write.table(gapminder,"`~/downloads/01_First_File.txt")
#Write a File
write.table(gapminder,file = G:\GitHub\R Getting Started with\R File ,'01_First_File.txt')
#Write a File
write.table(gapminder,file = ~/Downloads ,'01_First_File.txt')
#Write a File
write.table(gapminder,file = /Downloads ,'01_First_File.txt')
#Write a File
write.table(gapminder,"~/Downloads/my.txt")
#Write a File
write.table(gapminder,"~/Rdata/01_First_file.txt")
#calling libraries
library(gapminder)
library(dplyr)
head(gapminder)
write.table(gapminder,"~/Rdata/02_Second_File.txt")
#Remove Row name and Quotation
write.table(gapminder,"~/Rdata/02_Second_File.txt" quote = F)
#Remove Row name and Quotation
write.table(gapminder,"~/Rdata/02_Second_File.txt"; quote = F)
#Remove Row name and Quotation
write.table(gapminder,"~/Rdata/02_Second_File.txt", quote = F)
write.table(gapminder,"~/Rdata/02_Second_File.txt", quote = F,row.names = F)
write.table(gapminder,"~/Rdata/02_Second_File.txt")
#Remove Row name and Quotation
write.table(gapminder,"~/Rdata/02_Second_File.txt", quote = F)
write.table(gapminder,"~/Rdata/02_Second_File.txt", quote = F,row.names = F)
#uSE Column Name Sperator
write.ftable(gapminder, "~/Rdata/02_Second_File.txt",quote=F, row.names=F)
#uSE Column Name Sperator
write.table(gapminder, "~/Rdata/02_Second_File.txt",quote=F, row.names=F)
#uSE Column Name Sperator
write.table(gapminder, "~/Rdata/02_Second_File.txt",quote=F, row.names=F,sep = ",")
#Create another file Operate with |
write.table(gapminder,"~Rdata/03_Second_File.txt",quote= F, row.names = F, sep = "|")
#Create another file Operate with |
write.table(gapminder,"~/Rdata/03_Second_File.txt"",quote= F, row.names = F, sep = "|")
#Create another file Operate with |
write.table(gapminder,"~/Rdata/03_Second_File.txt",quote= F, row.names = F, sep = "|")
#call Libraries
library(gapminder)
library(dplyr)
head()
#Create another file Operate with |
write.table(gapminder,"~/Rdata/03_Third_File.txt",quote= F, row.names = F, sep = "|")
#Read files
read.table("~/Rdata/03_Third_file.txt")
#Create another file Operate with |
write.table(gapminder,"~/Rdata/03_Third_File.txt",quote= F, row.names = F, sep = "|")
#uSE Column Name Operator
write.table(gapminder, "~/Rdata/02_Second_File.txt",quote=F, row.names=F,sep = ",")
#Create another file Operate with |
write.table(gapminder,"~/Rdata/03_Third_File.txt",quote= F, row.names = F, sep = "|")
#Read files
read.table("~/Rdata/03_Third_file.txt")
#Set as Object
x=read.table("~/Rdata/03_Third_File.txt")
View(x)
#Now the column name is not arranged. Arrange the column
x=read.table("~/Rdata/03_Third_File.txt",header=T)
View(x)
#Now the column name is not arranged. Arrange the column
x=read.table("~/Rdata/03_Third_File.txt",sep="|")
View(x)
#Set name First row as column title
x=read.table("~/Rdata/03_Third_File.txt",sep = "|",colnames(x))
#Set name First row as column title
x=read.table("~/Rdata/03_Third_File.txt",sep = "|",colnames=T)
colnames(x)
#Set name First row as column title
x=read.table("~/Rdata/03_Third_File.txt",sep = "|",header = T)
colnames(x)
#Chesk Names
colnames(x)
#Call Libraries
library(gapminder)
library(dplyr)
head()
#For Excel create and read File Install this package
install.packages("gdata")
library(gdata)
library(gdata)
#Excel File --Write
write.table(gapminder,"~/Rdata/04.First_Excel.xls")
#Excel File --Write
write.xls(gapminder,"~/Rdata/04.First_Excel.xls")
#Read the data of Xl File
xl=read.xls("~/Rdata/04_First_Excel.xls")
write.table(gapminder,"~/Rdata/04.First_Excel.xls" quote = F)
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F)
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F,row.names = F)
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F,row.names = F,sep = "|")
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F,row.names = F)
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F,row.names = F)
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F,row.names = F,sep = "|")
write.table(gapminder,"~/Rdata/04.First_Excel.xlsx", quote = F,row.names = F,sep = "|")
write.table(gapminder,"~/Rdata/04.First_Excel.xls", quote = F,row.names = F,sep = "|")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_First_Second.xls")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_First_Second.xls")
#Read the data of Xl File
xl=read.table("~/Rdata/05_First_Second.xls")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_First_Second.xls")
#Read the data of Xl File
xl=read.xls("~/Rdata/05._econd_File.xls")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_Second_Excel.xls")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_Second_Excel.xlsx")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_Second_Excel.xlsx")
read.xls("~/Rdata/04.First_Excel.xls")
xl1=read.xls("~/Rdata/04.First_Excel.xls")
#Excel File --Write
write.table(gapminder,"~/Rdata/04.First_Excel.xlsx")
xl1=read.xls("~/Rdata/04.First_Excel.xlsx")
?gdata
#Read the data of Xl File
xl=read.excel("~/Rdata/05_Second_Excel.xlsx")
#Read the data of Xl File
xl=read.xls("~/Rdata/05_Second_Excel.xlsx")
#Read the data of Xl File
xl=read.xls("~/Rdata/04.First_Excel.xlsx")
write.table(gapminder,"~/Rdata/04.First_Excel.xlsx", quote = F,row.names = F,sep = "|")
#Read the data of Xl File
xl=read.xls("~/Rdata/04.First_Excel.xlsx")
#Read the data of Xl File
xl=read.xls("~/Rdata/sampledatafoodsales.xlsx")
#Plot is a default library of R
?plot
head(cars)
car=cars
View(car)
plot(cars)
#Now Plot the cars data
plot(cars)
#Another way of ploting by column name
plot(cars$dist,cars$speed)
#Another way of ploting by column name
plot(cars$speed,cars$dist)
#Interchange row and columns
plot(cars$dist,cars$speed)
#Add a title
plot(cars$dist,cars$speed,main="My First Plot")
#Change the Lebel name
plot(cars$dist,cars$speed,main="My First Plot",xlab = Distance, ylab = Speed)
#Change the Lebel name
plot(cars$dist,cars$speed,main="My First Plot",xlab = "Distance", ylab = "Speed")
#Change the color of plot
plot(cars,main="My First Plot",xlab = "Distance", ylab = "Speed")
#Change the color of plot
plot(cars,main="My First Plot",xlab = "Speed", ylab = "Distance")
#Change the color of plot
plot(cars,main="My First Plot",xlab = "Speed", ylab = "Distance",col="green")
#Create Line plot
plot(cars,"l")
#Plot is a default library of R
?plot
#Create Line plot
plot(cars$speed,cars$dist,"l")
#Create Line plot
plot(cars$speed,cars$dist,main="My First Plot",xlab = "Speed", ylab = "Distance""l")
#Create Line plot
plot(cars$speed,cars$dist,main="My First Plot",xlab = "Speed", ylab = "Distance","l")
plot(cars$speed,cars$dist,main="My First Plot",xlab = "Speed", ylab = "Distance","b")
plot(cars$speed,cars$dist,main="My First Plot",xlab = "Speed", ylab = "Distance","h")
